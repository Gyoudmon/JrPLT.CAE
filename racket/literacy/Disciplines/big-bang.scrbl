#lang scribble/manual

@(require "../literacy.rkt")

@(define figure-scale 0.36)

@;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@handbook-root-story{宇宙大爆炸}

@discipline-desc[
 #:langs [tag:C++ tag:Python]
 #:grades [tag:elementary tag:middle tag:teacher]
 #:period [24 32]
 #:note "对于有基础的学生，也需要从本课程中先修部分知识"]

@margin-note{取名为@tech{宇宙大爆炸}是顺应了宇宙发展“从无到有”的自然规律。}

@tamer-deftech{宇宙大爆炸}是青少计算机科学后续所有课程的基础。
学完本课程之后，学生将对程序语言、程序设计和计算思维有个初步的了解。

@tamer-figure!["d:bigbang" "宇宙大爆炸 主界面"]{@stone-image["Disciplines/big-bang.png" #:scale figure-scale]}

@tamer-figure-ref{d:bigbang}是@tech{宇宙大爆炸}的主界面。
其中，企鹅@racketerror{不是腾讯}，而是 @emph{Linux} 操作系统的吉祥物；
鱼币是企鹅的食物，大部分金币代表学生作品，少部分是教师扩展程序(这些可随
源码库一起提供给学生课后深入学习用)。

本课作为门槛级课，需预设若干不确定因素。
简而言之，课程共分为三个阶段,
内容适用于最优秀的学生，但能够向下兼容，
作品在设计上逐步迭代，
基础较弱的学生能得到一个可运行的基础程序；
学有余力的学生可继续体验真实的软件开发过程，
继续扩展、重构、优化基础程序。

授课过程优先考虑完成项目，非必要实验可省略。

@handbook-scenario{阶段1:打字训练}

在此阶段，师生通过简单程序互相了解，
也包括熟练使用键盘，了解程序开发的基本工具，
熟悉程序源码的基本结构，初步认识程序语言中的基本概念。

@handbook-scenario{阶段2:基础数据类型}

在此阶段，学生系统学习程序语言中的“原子”和“分子”，会比较多的强调跨学科应用；

@handbook-scenario{阶段3:初级计算思维}

此阶段会继续第二阶段的任务，但以课程作品形式开展，作品主题暂定为生命科学。
随着后续课程的研发，本课中的所有作品均可平行替换。

@;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@handbook-reference[]
